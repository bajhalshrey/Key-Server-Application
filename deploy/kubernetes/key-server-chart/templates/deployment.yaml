apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "key-server.fullname" . }}
  labels:
    {{- include "key-server.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "key-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "key-server.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "key-server.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: https
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          env:
            - name: PORT
              value: "{{ .Values.service.targetPort }}"
            - name: MAX_KEY_SIZE
              value: "{{ .Values.config.maxKeySize }}"
            # CORRECTED: Referencing tls.crt and tls.key as stored by Kubernetes in the secret
            - name: TLS_CERT_FILE
              value: "/etc/key-server/tls/tls.crt" # Path inside container for the certificate
            - name: TLS_KEY_FILE
              value: "/etc/key-server/tls/tls.key" # Path inside container for the private key
          volumeMounts:
            - name: tls-certs
              mountPath: "/etc/key-server/tls"
              readOnly: true
          livenessProbe:
            httpGet:
              path: /health
              port: https
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: https
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: tls-certs
          secret:
            secretName: {{ .Release.Name }}-tls-secret